help(colSums)
exonCount <- exonCount[, colnames(countExon) != "width"]
intronCount <- intronCount[, colnames(countExon) != "width"]
allCount <- exonCount + intronCount
fracInt <- colSums(intronCount) / colSums(allCount)
summary(fracIn)
exonCount <- exonCount[, colnames(countExon) != "width"]
intronCount <- intronCount[, colnames(countExon) != "width"]
allCount <- exonCount + intronCount
fracInt <- colSums(intronCount) / colSums(allCount)
summary(fracInt)
#### Packages ####
library(QuasR)
library(eisaR)
library(TxDb.Hsapiens.UCSC.hg18.knownGene)
# library(EnsDb.Hsapiens.v75)
# library(genomation) # for annotation
setwd("/Users/Pomato/mrc/project/sita") # "/Users/Pomato/mrc/project/sita" "/rds/project/rs2099/rds-rs2099-toxgenomics/sita"
#### Alignment ####
proj <- qAlign(sampleFile="list/sita_sample.txt", # "./list/sita_samples.txt" "./list/sita_sample.txt"
genome="BSgenome.Hsapiens.UCSC.hg18",
aligner="Rhisat2",
splicedAlignment=TRUE)
#### Counting exons and introns ####
regStranded <- getRegionsFromTxDb(txdb=TxDb.Hsapiens.UCSC.hg18.knownGene, strandedData=TRUE)
# Convert coordinates to gene name
# TBD
exonCount <- qCount(proj, regStranded$exons, orientation="any", reportLevel="gene")
genebodyCount <- qCount(proj, regStranded$genebodies, orientation="any", reportLevel="gene")
intronCount <- genebodyCount - exonCount
# Save counts to output
write.table(exonCount, file="processed/ExonicCounts_THAP_HEK.txt", row.names=TRUE, col.names=TRUE)
write.table(intronCount, file="processed/IntronicCounts_THAP_HEK.txt", row.names=TRUE, col.names=TRUE)
#### Normalisation ####
# Remove "width" column
exonCount <- exonCount[, colnames(countExon) != "width"]
intronCount <- intronCount[, colnames(countExon) != "width"]
allCount <- exonCount + intronCount
fracInt <- colSums(intronCount) / colSums(allCount)
summary(fracInt)
exonCount <- qCount(proj, regStranded$exons, orientation="any", reportLevel="gene")
genebodyCount <- qCount(proj, regStranded$genebodies, orientation="any", reportLevel="gene")
intronCount <- genebodyCount - exonCount
# Save counts to output
write.table(exonCount, file="processed/ExonicCounts_THAP_HEK.txt", row.names=TRUE, col.names=TRUE)
write.table(intronCount, file="processed/IntronicCounts_THAP_HEK.txt", row.names=TRUE, col.names=TRUE)
#### Normalisation ####
# Remove "width" column
exon <- exonCount[, colnames(exonCount) != "width"]
intron <- intronCount[, colnames(exonCount) != "width"]
all <- exon + intron
fracInt <- colSums(intron) / colSums(all)
summary(fracInt)
intron <- intronCount[, colnames(intronCount) != "width"]
all <- exon + intron
fracInt <- colSums(intron) / colSums(all)
summary(fracInt)
all
intron
dim(intron)
fracInt
intronCount
intron
all
fracInt
colnames(exonCount)
colnames(exon)
exon <- exonCount[, colnames(exonCount) != "width"]
intron <- intronCount[, colnames(intronCount) != "width"]
all <- exon + intron
fracInt <- colSums(intron) / colSums(all)
summary(fracInt)
rm(fracInt)
all <- exon + intron
fracInt <- colSums(intron) / colSums(all)
summary(fracInt)
colSums(intron)
#### Packages ####
library(QuasR)
library(eisaR)
library(TxDb.Hsapiens.UCSC.hg18.knownGene)
# library(EnsDb.Hsapiens.v75)
# library(genomation) # for annotation
setwd("/Users/Pomato/mrc/project/sita") # "/Users/Pomato/mrc/project/sita" "/rds/project/rs2099/rds-rs2099-toxgenomics/sita"
#### Alignment ####
proj <- qAlign(sampleFile="list/sita_sample.txt", # "./list/sita_samples.txt" "./list/sita_sample.txt"
genome="BSgenome.Hsapiens.UCSC.hg18",
aligner="Rhisat2",
splicedAlignment=TRUE)
